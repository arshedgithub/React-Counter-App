{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","Counter","this","props","counter","onIncrement","onSubstitution","onDelete","getBadgeClass","formatCount","value","onClick","disabled","id","badgeClass","Component","Counters","counters","onReset","map","App","state","handleIncrement","index","indexOf","setState","handleSubstitution","handleReset","handleDelete","counterID","filter","c","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7a132d7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NavBar = ({ totalCounters }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light p-3\">\r\n      <div className=\"container-fluid\">\r\n        <h3>\r\n          Counters <span className=\"badge bg-secondary\">{totalCounters}</span>\r\n        </h3>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    const { counter, onIncrement, onSubstitution, onDelete } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-1 mx-2\">\r\n            <span className={this.getBadgeClass()}>\r\n              {this.formatCount(counter.value)}\r\n            </span>\r\n          </div>\r\n          <div className=\"col\">\r\n            <button\r\n              className=\"btn btn-secondary mx-1\"\r\n              onClick={() => onIncrement(counter)}\r\n            >\r\n              +\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary mx-2\"\r\n              onClick={() => onSubstitution(counter)}\r\n              disabled={counter.value === 0 ? \"disabled\" : \"\"}\r\n            >\r\n              -\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => onDelete(counter.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"zero\" : value;\r\n  }\r\n\r\n  getBadgeClass() {\r\n    let badgeClass = \"badge bg-\";\r\n    badgeClass +=\r\n      this.props.counter.value === 0 ? \"warning fs-6\" : \"primary fs-5\";\r\n    return badgeClass;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nconst Counters = ({\r\n  counters,\r\n  onIncrement,\r\n  onSubstitution,\r\n  onReset,\r\n  onDelete,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-sm btn-primary m-3\" onClick={onReset}>\r\n        Reset\r\n      </button>\r\n      {counters.map((counter) => (\r\n        <Counter\r\n          key={counter.id}\r\n          counter={counter}\r\n          onIncrement={onIncrement}\r\n          onSubstitution={onSubstitution}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counters;\r\n","import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ]\n  }\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  }\n\n  handleSubstitution = (counter) => {\n    const counters = this.state.counters;\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value--;\n    this.setState({ counters })\n  }\n\n  handleReset = () => {\n    this.setState({\n      counters: [\n        { id: 1, value: 0 },\n        { id: 2, value: 0 },\n        { id: 3, value: 0 },\n        { id: 4, value: 0 },\n      ]\n    });\n  }\n\n  handleDelete = (counterID) => {\n    const counters = this.state.counters.filter(c => c.id !== counterID);\n    this.setState({ counters })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length} />\n        <Counters counters={this.state.counters}\n          onIncrement={this.handleIncrement}\n          onSubstitution={this.handleSubstitution}\n          onReset={this.handleReset}\n          onDelete={this.handleDelete} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}